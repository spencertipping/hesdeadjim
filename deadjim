#!/bin/bash
# My monitoring script; you would probably want to rewrite the site-specific
# stuff below.

export NI_NO_MONITOR=yes

start_time=`date +%s`

# Kick off a watchdog that will kill this script if it fails to complete in time
self_pid=$$
( sleep 840 && kill $self_pid ) &
watchdog_pid=$!

cd "$(dirname "$0")"
git pull >&/dev/null

outfile=$1

exec >"$outfile.tmp"

for thing in ok info warning problem; do
  eval "$thing() { echo \"<div class='$thing'>\$1</div>\"; }"
done

disk_check() {
  local name=$1
  local limit=$2
  local bad_deadness=$3
  local good_deadness=$4
  local df_output=$5

  local free=`echo "$df_output" | tail -n1 | awk '{print $4}'`
  if (( free < limit )); then
    $bad_deadness "$name has $free MB free (below limit of $limit)"
  else
    $good_deadness "$name has $free MB free"
  fi
}

loadavg_check() {
  local name=$1
  local limit=$2
  local howbad=$3
  local proc_loadavg=$4

  local load_avg=`echo "$proc_loadavg" | awk '{print $1}'`
  if (( ${load_avg%.*} > ${limit%.*} )); then
    $howbad "$name has 1-minute load average $load_avg (limit is $limit)"
  else
    ok "$name has 1-minute load average $load_avg"
  fi
}

ssh_access_check() {
  local name=$1
  local ip=$2
  local howbad=$3
  local subnets=$4

  local bogus_logins=` \
    ./ni s$ip[/var/log/auth.log r-1024] r/Accepted/ \
         rp"!/from (?:$subnets)/" \
         rp'my ($y, $m) = tep Ym => time;
            within 0, 3600, time() - tpe($y, $m, /\d+/g)'`

  [[ -z "$bogus_logins" ]] \
    || $howbad "$name: unexpected login(s): $bogus_logins"
}

host_up_check() {
  local name=$1
  local ip=$2
  local howbad=$3
  local loadavg_limit=${4:-4}
  local ssh_allowed_subnets=${5:-10\\.35\\.}

  ping -c 2 -q $ip > /dev/null || { $howbad "$name is offline"; return; }
  ssh $ip :                    || { $howbad "$name SSH is down"; return; }

  disk_check "$name root FS" 512 problem info "`ssh $ip df -m /`"
  loadavg_check $name $loadavg_limit problem "`ssh $ip cat /proc/loadavg`"
  [[ -n "$ssh_allowed_subnets" ]] \
    && ssh_access_check $name $ip problem "$ssh_allowed_subnets"
}

ping_check() {
  local name=$1
  local ip=$2
  local howbad=$3

  if ping -c 4 -W 4 -q $ip > /dev/null; then
    ok "$name is connected"
  else
    $howbad "$name is offline"
  fi
}

echo "<div id='rundate'>`date +%s`</div>"

host_up_check rorschach  10.35.0.2 problem 48 '10\.35\.[01]\.|192\.168\.0\.'
host_up_check reykjavik  10.35.0.3 problem 16
host_up_check rho        10.35.0.4 problem 4
host_up_check rockhopper 10.35.0.5 info    48     # not always on

# Check torrent server
if ! curl --max-time 5 10.35.0.2:8280 >&/dev/null; then
  problem "rorschach torrent server appears to be down"
else
  ok "rorschach torrent server is running"
fi

# Check gitlab server
if ! curl --max-time 5 10.35.0.3:8180 >&/dev/null; then
  problem "reykjavik gitlab appears to be down"
else
  ok "reykjavik gitlab is running"
fi

gitlab_backup_modtime=$(< /mnt/v1/backups/reykjavik-srv-backup/backup-date)
gitlab_backup_seconds=$((start_time - gitlab_backup_modtime))
if (( gitlab_backup_seconds > 3600 + 1800 )); then
  problem "gitlab backup is too old: ${gitlab_backup_seconds}s (limit is 5400s)"
else
  ok "gitlab backup is ${gitlab_backup_seconds}s"
fi

# Check rocketchat server
if ! curl --max-time 5 10.35.0.3:8380 >&/dev/null; then
  problem "reykjavik rocketchat appears to be down"
else
  ok "reykjavik rocketchat is running"
fi

rocketchat_backup_modtime=$(stat --format=%Y `ls -t /mnt/v1/backups/reykjavik-rocketchat/* | head -n1` || echo 0)
rocketchat_backup_seconds=$((start_time - rocketchat_backup_modtime))
if (( rocketchat_backup_seconds > 3600 + 1800 )); then
  problem "rocketchat backup is too old: ${rocketchat_backup_seconds}s (limit is 5400s)"
else
  ok "rocketchat backup is ${rocketchat_backup_seconds}s"
fi

# Check public rocketchat server
if ! curl --max-time 10 https://dev.spencertipping.com >&/dev/null; then
  problem "dev.spencertipping.com rocketchat appears to be down"
else
  ok "dev.spencertipping.com rocketchat is running"
fi

dev_rocketchat_backup_modtime=$(stat --format=%Y `ls -t /mnt/v1/backups/dev-spencertipping-rocketchat/* | head -n1` || echo 0)
dev_rocketchat_backup_seconds=$((start_time - dev_rocketchat_backup_modtime))
if (( dev_rocketchat_backup_seconds > 3600 + 1800 )); then
  problem "dev rocketchat backup is too old: ${dev_rocketchat_backup_seconds}s (limit is 5400s)"
else
  ok "dev rocketchat backup is ${dev_rocketchat_backup_seconds}s"
fi

# Check RAID6 on rho
ssh 10.35.0.4 'cat /proc/mdstat' | egrep -q UUUUUUUUUUUU \
  || problem "rho RAID6 is degraded or down"

# Make sure /mnt/v1 is mounted and writable
if ! [[ -d /mnt/v1/st ]]; then
  problem "/mnt/v1 is offline"
elif ! touch /mnt/v1/st/deadjim; then
  problem "/mnt/v1 isn't writable"
else
  ok "/mnt/v1 is online + writable"
fi

# Shared volumes
# 2TB usage margin on /mnt/v1
# 1TB usage margins on /mnt/t9 and /mnt/t3
disk_check "/mnt/v1" $((2048 * 1024)) problem info "`df -m /mnt/v1`"
disk_check "reykjavik /mnt/t9" 1048576 problem info "`ssh 10.35.0.3 df -m /mnt/t9`"
disk_check "reykjavik /mnt/t3" 1048576 problem info "`ssh 10.35.0.3 df -m /mnt/t3`"

# VPN clients
ping_check "VPN iniidae"      10.35.1.4  warning
ping_check "VPN iris"         10.35.1.6  warning
ping_check "VPN lily"         10.35.1.8  warning
ping_check "VPN xhosacetus"   10.35.0.10 warning
ping_check "VPN xenorophidae" 10.35.0.12 warning

# ISP status
ping_check "DSL modem"              192.168.0.1 problem
ping_check "Public DNS (primary)"   8.8.8.8     problem
ping_check "Public DNS (secondary)" 8.8.4.4     problem

# Website status
ping_check "spencertipping.com" spencertipping.com problem

ip=`curl --max-time 5 spencertipping.com/ip.php 2>/dev/null`
if ! egrep -q '[0-9]+\.[0-9]+\.' <<<"$ip"; then
  problem "spencertipping.com failed to report our IP: $ip"
else
  ok "WAN IP is $ip"
fi

# Port forwarding status
# Look for bogus SSH logins within the last ten minutes.
last_ssh_invalid=`tail -n1024 /var/log/auth.log \
                  | ./ni r/Invalid/ r+1p'my ($y, $m) = tep Ym => time;
                                         int time() - tpe $y, $m, /\d+/g'`

if (( last_ssh_invalid > 1800 )); then
  problem "SSH port forwarding may not be working ($last_ssh_invalid seconds since last invalid attempt)"
else
  ok "SSH port forwarding is working as of $last_ssh_invalid seconds ago"
fi

end_time=`date +%s`

if (( end_time - start_time > 90 )); then
  problem "deadjim script took $((end_time - start_time)) seconds"
else
  ok "deadjim script completed in $((end_time - start_time)) seconds"
fi

# Finalization
kill $watchdog_pid

mv "$outfile.tmp" "$outfile"
